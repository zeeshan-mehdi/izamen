{"version":3,"sources":["components/Dashboard/MembersArea/MembersArea.js","components/Dashboard/style/design.js","components/Dashboard/style/noData.svg","components/Dashboard/EmptyArea/EmptyArea.js","components/Dashboard/ExportCsvButton/ExportCsvButton.js","components/Dashboard/ClearButton/ClearButton.js","components/Dashboard/style/TableViewTemplate/TableViewTemplate.js","../node_modules/@material-ui/icons/Info.js","../node_modules/@material-ui/icons/Edit.js"],"names":["compose","withStyles","theme","root","flexGrow","color","root1","minWidth","internal","backGroundColor","bullet","display","margin","transform","title","fontSize","pos","marginBottom","props","classes","useState","selectedRow","setSelectedRow","editPropertyModal","toggleEditPropertyModal","propertytype","setpropertytype","property_ID","setproperty_ID","propertydescription","setpropertydescription","propertysubtype","setpropertysubtype","propertypurpose","setpropertypurpose","propertyprice","setpropertyprice","propertyspace","setpropertyspace","propertyaddress","setpropertyaddress","propertycity","setpropertycity","propertycountry","setpropertycountry","setpropertytitle","propertyareatype","setpropertyareatype","setagent","agents","setagents","dataField","text","sort","formatter","cell","row","agent_ID","style","src","alt","rowIndex","formatExtraData","onClick","property_type","description","property_purpose","price","area","address","city","country","area_type","setEditingProperty","ondetails","placement","infoIconColor","marginLeft","axios","post","globalvariables","data","Basicapi","headers","then","a","response","console","log","image","catch","error","alert","toString","onedit","editIconColor","setvisible1","ondelete","deleteIconColor","propetycolums","properties","Setproperties","editingProperty","listinggallery","visible1","getUploadParams","file","meta","name","url","updateproperty","patch","sub_type","getProperties","useEffect","get","res","length","user_ID1","localStorage","getItem","user_ID","fluid","to","className","keyField","columns","addButtonText","tabTitle","addButtonOnClick","exportCsvButtonShow","addButtonShow","zIndex","show","centered","size","Header","backgroundColor","Title","Body","type","placeholder","defaultValue","onChange","event","target","value","rows","map","item","firstName","lastName","email","onChangeStatus","status","accept","styles","dropzone","minHeight","maxHeight","disabled","img_path","width","height","Footer","variant","cardViewStyle","borderRadius","padding","marginTop","Area","noData","imageStyle","ExportCsvButton","Button","onExport","float","ClearButton","onClear","SearchBar","Search","rowClasses","IsBlocked","TableViewTemplate","options","sizePerPageRenderer","currSizePerPage","onSizePerPageChange","role","option","isSelect","page","indication","EmptyArea","search","exportCSV","onlyExportFiltered","exportAll","searchProps","startIcon","whiteSpace","baseProps","bordered","pagination","paginationFactory","noDataIndication","rowStyle","csvProps","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d"],"mappings":"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","file":"static/js/74.bfea2456.chunk.js","sourcesContent":["\r\n/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n// import PieChart from \"../common/PieCharts\";\r\n// import CustomBarChart from \"../common/BarChart\";\r\n// import {\r\n//   Box,\r\n\r\n//   Grid,\r\n//   makeStyles,\r\n//   Typography,\r\n// } from \"@material-ui/core\";\r\nimport { Container, Row, Col, Tab, Tabs, Modal, Card, Button } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport \"react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n// import { getOrdersDate } from \"../../redux/actions/orderActions\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n\r\n\r\n  componentTopMargin,\r\n  deleteIconColor,\r\n  editIconColor,\r\n  infoIconColor\r\n} from \"../style/design\";\r\n\r\nimport 'react-dropzone-uploader/dist/styles.css'\r\nimport Dropzone from 'react-dropzone-uploader';\r\nimport EmptyArea from \"../EmptyArea/EmptyArea\";\r\nimport TableViewTemplate from \"../style/TableViewTemplate/TableViewTemplate\";\r\nimport globalvariables from \"../../../globalvariables\";\r\nimport axios from 'axios';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n\r\n\r\nconst Styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  root1: {\r\n    minWidth: 275,\r\n  },\r\n  internal: {\r\n    backGroundColor: \"#FFFFFF\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\n\r\nfunction MembersArea(props) {\r\n  const { classes } = props;\r\n\r\n  let [selectedRow, setSelectedRow] = useState({});\r\n  let [editPropertyModal, toggleEditPropertyModal] = useState(false);\r\n\r\n  let [propertytype, setpropertytype] = useState(\"\");\r\n  let [property_ID, setproperty_ID] = useState(\"\");\r\n  let [propertydescription, setpropertydescription] = useState(\"\");\r\n  let [propertysubtype, setpropertysubtype] = useState(\"\");\r\n  let [propertypurpose, setpropertypurpose] = useState(\"\");\r\n  let [propertyprice, setpropertyprice] = useState(\"\");\r\n  let [propertyspace, setpropertyspace] = useState(\"\");\r\n  let [propertythumbnail, setpropertythumbnail] = useState(\"\");\r\n  let [propertyimages, setpropertyimages] = useState(\"\");\r\n  let [propertyaddress, setpropertyaddress] = useState(\"\");\r\n  let [propertycity, setpropertycity] = useState(\"\");\r\n  let [propertycountry, setpropertycountry] = useState(\"\");\r\n  let [propertytitle, setpropertytitle] = useState(\"\");\r\n  let [propertyareatype, setpropertyareatype] = useState(\"\");\r\n  let [agent, setagent] = useState([]);\r\n  let [agents, setagents] = useState([]);\r\n\r\n  function indication() {\r\n    return <EmptyArea />;\r\n  }\r\n\r\n  function ondetails(row) {\r\n    // this.setState({ rowdata: row, fordetails: true, showdetailsofoffice: true });\r\n    setSelectedRow(row);\r\n    setpropertytype(row.property_type);\r\n    setpropertydescription(row.description);\r\n    setpropertysubtype(row.propertysubtype);\r\n    setpropertypurpose(row.property_purpose);\r\n    setpropertyprice(row.price);\r\n    setpropertyspace(row.area);\r\n    setpropertyaddress(row.address);\r\n    setpropertycity(row.city);\r\n    setpropertycountry(row.country);\r\n    setpropertytitle(row.title);\r\n    setpropertyareatype(row.area_type);\r\n    setEditingProperty(false);\r\n    toggleEditPropertyModal(true);\r\n  }\r\n\r\n  function onedit(row) {\r\n    // this.setState({ rowdata: row, fordetails: true, showdetailsofoffice: true });\r\n\r\n    try {\r\n      axios.post(globalvariables.data.Basicapi + \"getPropertyImagesOnPropertyID\",\r\n        {\r\n          property_ID: row.property_ID\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        })\r\n        .then(async (response) => {\r\n          console.log(\"Finding properties images successfully\", response.data);\r\n          row = { ...row, image: response.data }\r\n          setSelectedRow(row);\r\n          toggleEditPropertyModal(true);\r\n          setEditingProperty(true)\r\n        })\r\n        .catch(error => {\r\n          alert(\"in catch of axios while Find images properties\", error.toString());\r\n\r\n        });\r\n\r\n    } catch (error) {\r\n\r\n      alert(\"in try catch while Finding Images\", error.toString());\r\n\r\n    }\r\n\r\n  }\r\n  function ondelete(row) {\r\n    setproperty_ID(row.property_ID);\r\n    setvisible1(true);\r\n\r\n  }\r\n\r\n  function tableRowActions(cell, row, rowIndex, formatExtraData) {\r\n    return (\r\n      <><Link\r\n        onClick={() => {\r\n          ondetails(row);\r\n        }}\r\n      >\r\n        <Tooltip title={\"Details\"} placement={\"right\"}>\r\n          <InfoIcon style={infoIconColor} />\r\n        </Tooltip>\r\n      </Link>\r\n\r\n        <Link\r\n          style={{ marginLeft: '5%' }}\r\n          onClick={() => {\r\n            onedit(row);\r\n          }}\r\n        >\r\n          <Tooltip title={\"Edit\"} placement={\"right\"}>\r\n            <EditIcon style={editIconColor} />\r\n          </Tooltip>\r\n        </Link>\r\n\r\n        <Link\r\n          style={{ marginLeft: '5%' }}\r\n          onClick={() => {\r\n            ondelete(row);\r\n          }}\r\n        >\r\n          <Tooltip title={\"Delete\"} placement={\"right\"}>\r\n            <DeleteIcon style={deleteIconColor} />\r\n          </Tooltip>\r\n        </Link>\r\n      </>\r\n\r\n    );\r\n  };\r\n\r\n\r\n  function agentconnected(cell, row) {\r\n    if (row.agent_ID) {\r\n      return (\r\n        <span>\r\n          <strong style={{ color: 'green' }}>Yes</strong>\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <span>No</span>\r\n    );\r\n  }\r\n\r\n  function coverphoto(cell, row) {\r\n    return (\r\n      <span>\r\n        <img src={cell} alt=\"Cover Photo\" />\r\n      </span>\r\n    );\r\n\r\n\r\n  }\r\n  const [propetycolums, setpropetycolums] = useState([\r\n    {\r\n\r\n      dataField: \"property_ID\",\r\n      text: \"ID\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"title\",\r\n      text: \"Title\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"description\",\r\n      text: \"Description\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"address\",\r\n      text: \"Address\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"city\",\r\n      text: \"City\",\r\n      sort: true,\r\n    },\r\n\r\n    {\r\n      dataField: \"area\",\r\n      text: \"Area\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"area_type\",\r\n      text: \"Area Type\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"property_type\",\r\n      text: \"Property Type\",\r\n      sort: true,\r\n    }, {\r\n      dataField: \"dateOfAdvert\",\r\n      text: \"Date of Advert\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"agent_ID\",\r\n      text: \"Agent Connected\",\r\n      formatter: agentconnected\r\n    },\r\n    {\r\n      dataField: \"img_path\",\r\n      text: \"Cover Photo\",\r\n      formatter: coverphoto\r\n    },\r\n\r\n    {\r\n      dataField: \"details\",\r\n      text: \"\",\r\n      formatter: tableRowActions,\r\n    },\r\n\r\n  ])\r\n  const [properties, Setproperties] = useState([]);\r\n  const [editingProperty, setEditingProperty] = useState(false);\r\n  const [listinggallery, setlistinggallery] = useState([]);\r\n  const [visible1, setvisible1] = useState(false);\r\n\r\n  const getUploadParams = async ({ file, meta: { name } }) => {\r\n    return { url: 'https://httpbin.org/post' }\r\n\r\n  }\r\n  const updateproperty = async () => {\r\n    try {\r\n      console.log(\"UDPATED VAUE: \", selectedRow)\r\n      await axios.patch(globalvariables.data.Basicapi + \"updateProperty\",\r\n        {\r\n          'property_ID': selectedRow.property_ID,\r\n          'agent_ID': selectedRow.agent_ID,\r\n          'title': selectedRow.title,\r\n          'address': selectedRow.address,\r\n          'city': selectedRow.city,\r\n          'country': selectedRow.country,\r\n          'lat': '34.3',\r\n          'long': '22.3',\r\n          'area': selectedRow.area,\r\n          'property_type': selectedRow.property_type,\r\n          'property_purpose': selectedRow.property_purpose,\r\n          'price': selectedRow.price,\r\n          'area_type': selectedRow.area_type,\r\n          'sub_type': selectedRow.sub_type,\r\n          'description': selectedRow.description,\r\n\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        })\r\n        .then(async (response) => {\r\n          getProperties()\r\n          console.log(\"property added successfully\", response);\r\n\r\n        })\r\n        .catch(error => {\r\n          alert(\"in catch of axios while submitting property\", error.toString());\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"in try catch while submitting property\", error.toString());\r\n\r\n    }\r\n  }\r\n\r\n\r\n  const handleChangeStatus = ({ meta }, status) => {\r\n    console.log(status, meta)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    getProperties()\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(globalvariables.data.Basicapi + \"getAllAgents\",\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting agents\", res.data);\r\n      if (res.data.length > 0) {\r\n        setagents(res.data)\r\n\r\n      }\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting agents\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  var getProperties = async () => {\r\n    try {\r\n      let user_ID1 = localStorage.getItem(\"user_ID\")\r\n      const res = await axios.post(globalvariables.data.Basicapi + \"getPropertyOnUserID\",\r\n        {\r\n          user_ID: user_ID1\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting properties\", res.data);\r\n      if (res.data.length > 0) {\r\n        Setproperties(res.data)\r\n\r\n      }\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting properties\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n\r\n        <Link to=\"/submit-listing\" className=\"btn-custom primary\">Add Property</Link>\r\n\r\n        <TableViewTemplate\r\n          keyField={\"property_ID\"}\r\n          data={properties}\r\n          columns={propetycolums}\r\n          addButtonText={\"Add Property\"}\r\n          tabTitle={\"Properties\"}\r\n          addButtonOnClick={() => { }\r\n            // setdisplaymodal(true)\r\n          }\r\n          exportCsvButtonShow={true}\r\n          addButtonShow={false}\r\n        />\r\n\r\n\r\n      </Container>\r\n\r\n      <Modal\r\n        style={{ zIndex: '10000000' }}\r\n        show={editPropertyModal}\r\n        centered\r\n        size=\"lg\"\r\n      >\r\n        <Modal.Header style={{ backgroundColor: \"#CAAE59\", color: \"white\" }}>\r\n\r\n          <Modal.Title>\r\n            {editingProperty ? \"Edit Property\" : \"View Details\"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n\r\n            {editingProperty ? (\r\n              <Container>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" name=\"title\" className=\"form-control\" placeholder=\"Title\" defaultValue={selectedRow.title} onChange={(event) => { console.log(selectedRow); selectedRow.title = event.target.value; setSelectedRow(selectedRow); }} />\r\n                  </div>\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <label>Property Description</label>\r\n                    <textarea name=\"content\" defaultValue={selectedRow.description}\r\n                      onChange={(event) => { selectedRow.description = event.target.value; setSelectedRow(selectedRow); }}\r\n                      rows={4} className=\"form-control\" placeholder=\"Property Description\" />\r\n                  </div>\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <label>Edit Agent<span style={{ color: \"red\" }}>*</span></label>\r\n                    <select className=\"form-control\" defaultValue={selectedRow.agent_ID} name=\"status\" onChange={(event) => { selectedRow.agent_ID = event.target.value; setSelectedRow(selectedRow) }}>\r\n                      <option value={null}>{\"Select Agent\"}</option>\r\n                      {agents.map((item) => {\r\n                        return <option value={item.agent_ID}>{item.firstName + \" \" + item.lastName + \" - \" + item.email}</option>\r\n\r\n                      })}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <label>Property Type<span style={{ color: \"red\" }}>*</span></label>\r\n                    <select className=\"form-control\" name=\"type\"\r\n                      onChange={event => { selectedRow.property_type = event.target.value; setpropertytype(selectedRow) }}\r\n                      defaultValue={selectedRow.property_type}\r\n                    >\r\n                      <option value=\"none\">None</option>\r\n                      <option value=\"Land/Plot\">Land/Plot</option>\r\n                      <option value=\"Buildings\">Buildings</option>\r\n\r\n                    </select>\r\n                  </div>\r\n                  {\r\n                    propertytype === \"none\" ? (null) :\r\n                      (null)\r\n\r\n                  }\r\n                  {\r\n                    propertytype === \"Land/Plot\" ? (<div className=\"col-md-6\">\r\n                      <label>Property Sub Type<span style={{ color: \"red\" }}>*</span></label>\r\n                      <select className=\"form-control\" name=\"subtype\" defaultValue={selectedRow.sub_type} onChange={(event) => {\r\n                        selectedRow.sub_type = event.target.value;\r\n                        setSelectedRow(selectedRow);\r\n                      }}>\r\n                        <option value=\"openLand\">Open Land</option>\r\n                        <option value=\"ResidentialPlot\">Residential Plot</option>\r\n                        <option value=\"Commercial\">Commercial Plot</option>\r\n                        <option value=\"AgriculturalLand\">Agricultural Land</option>\r\n                        <option value=\"IndustrialLand\">Industrial Plot</option>\r\n                      </select>\r\n                    </div>) :\r\n                      (null)\r\n\r\n                  }\r\n                  {\r\n                    propertytype === \"Buildings\" ?\r\n                      (<div className=\"col-md-6\">\r\n                        <label>Property Sub Type<span style={{ color: \"red\" }}>*</span></label>\r\n                        <select className=\"form-control\" name=\"type\" defaultValue={selectedRow.sub_type} onChange={(event) => {\r\n                          selectedRow.sub_type = event.target.value;\r\n                          setSelectedRow(selectedRow);\r\n                        }}>\r\n                          <option value=\"HouseProperty\">House Property</option>\r\n                          <option value=\"Villa\">Villa</option>\r\n                          <option value=\"FarmHouse\">Farm House</option>\r\n                          <option value=\"Mall\">Mall</option>\r\n                          <option value=\"Apartment\">Apartment</option>\r\n                          <option value=\"AprtmentBlock\">Apartment Block</option>\r\n                          <option value=\"Hotel\">Hotel</option>\r\n                          <option value=\"IndustrialBuilding\">Industrial Building</option>\r\n                          <option value=\"PentHouse\">Pent House</option>\r\n\r\n                        </select>\r\n                      </div>) : (null)\r\n\r\n                  }\r\n\r\n                  <div className=\"col-md-6 form-group\">\r\n                    <label>Property Purpose<span style={{ color: \"red\" }}>*</span></label>\r\n                    <select className=\"form-control\" name=\"status\" defaultValue={selectedRow.property_purpose} onChange={(event) => {\r\n                      selectedRow.property_purpose = event.target.value;\r\n                      setSelectedRow(selectedRow);\r\n                    }}>\r\n                      <option value=\"none\">none</option>\r\n                      <option value=\"Sale\">Sale</option>\r\n                      <option value=\"Purchase\">Purchase</option>\r\n                      <option value=\"Rent\">Rent</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6 form-group\">\r\n                    <label>Property Price<span style={{ color: \"red\" }}>*</span></label>\r\n                    <div className=\"input-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">PKR</span>\r\n                      </div>\r\n                      <input type=\"text\" className=\"form-control\" name=\"price\" defaultValue={selectedRow.price} onChange={(event) => { console.log(\"UPDATEEE: \", event.target.value); selectedRow.price = event.target.value; setSelectedRow(selectedRow) }} placeholder=\"Property Price\" />\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6\">\r\n                        <label>Area Type<span style={{ color: \"red\" }}>*</span></label>\r\n                        <select className=\"form-control\" name=\"type\" defaultValue={selectedRow.area_type}\r\n                          onChange={event => { selectedRow.area_type = event.target.value; setSelectedRow(selectedRow) }}\r\n\r\n                        >\r\n                          <option value=\"none\">None</option>\r\n                          <option value=\"squarefoot\">Square foot</option>\r\n                          <option value=\"yard\">Yards</option>\r\n                          <option value=\"marla\">Marla</option>\r\n                          <option value=\"kanal\">Kanal</option>\r\n                          <option value=\"moza\">Moza</option>\r\n\r\n                          <option value=\"acre\">Acre</option>\r\n\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label>Area<span style={{ color: \"red\" }}>*</span></label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Area \" defaultValue={selectedRow.area} onChange={(event) => { selectedRow.area = event.target.value; setSelectedRow(selectedRow) }} name=\"space\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"form-group\">\r\n                    <label>Property Gallery</label>\r\n                    <Dropzone\r\n                      getUploadParams={getUploadParams}\r\n                      onChangeStatus={handleChangeStatus}\r\n                      // onSubmit={handleSubmit}\r\n                      accept=\"image/*\"\r\n                      styles={{ dropzone: { minHeight: 200, maxHeight: 250 } }}\r\n                    />\r\n\r\n                    <span className=\"acr-form-notice\">*You can upload up to 10 images for your listing</span>\r\n                    <span className=\"acr-form-notice\">*Listing images should be atleast 620x480 in dimensions</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <label>City</label>\r\n                    <input type=\"text\" name=\"city\" className=\"form-control\" defaultValue={selectedRow.city} placeholder=\"City\" onChange={(event) => { selectedRow.city = event.target.value; setSelectedRow(selectedRow) }} />\r\n                  </div>\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <label>Address</label>\r\n                    <input type=\"text\" name=\"address\" className=\"form-control\" defaultValue={selectedRow.address} placeholder=\"Address\" onChange={(event) => { selectedRow.address = event.target.value; setSelectedRow(selectedRow) }} />\r\n                  </div>\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <label>Country</label>\r\n                    <input type=\"text\" name=\"country\" className=\"form-control\" defaultValue={selectedRow.country} placeholder=\"Country\" onChange={(event) => { selectedRow.country = event.target.value; setSelectedRow(selectedRow) }} />\r\n                  </div>\r\n\r\n                  <button className=\"btn-custom\" onClick={updateproperty} >Update Listing</button>\r\n\r\n                </div>\r\n              </Container>\r\n\r\n            ) : (\r\n              <Container>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <label>Title</label>\r\n                    <input disabled type=\"text\" name=\"title\" className=\"form-control\" placeholder=\"Title\" onChange={(event) => { setpropertytitle(event.target.value) }} />\r\n                  </div>\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <label>Property Description</label>\r\n                    <textarea disabled name=\"content\" value={propertydescription} onChange={(event) => { setpropertydescription(event.target.value) }} rows={4} className=\"form-control\" placeholder=\"Property Description\" />\r\n                  </div>\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <label>Edit Agent<span style={{ color: \"red\" }}>*</span></label>\r\n                    <select disabled className=\"form-control\" name=\"status\" onChange={(event) => { setagent(event.target.value) }}>\r\n                      {agents.map((item) => {\r\n                        return <option value={item.agent_ID}>{item.firstName + \" \" + item.lastName + \"-\" + item.email}</option>\r\n\r\n                      })}\r\n\r\n\r\n\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <label>Property Type<span style={{ color: \"red\" }}>*</span></label>\r\n                    <select disabled className=\"form-control\" name=\"type\"\r\n                      onChange={event => setpropertytype(event.target.value)}\r\n                      value={propertytype}\r\n                    >\r\n                      <option value=\"none\">None</option>\r\n                      <option value=\"Land/Plot\">Land/Plot</option>\r\n                      <option value=\"Buildings\">Buildings</option>\r\n\r\n                    </select>\r\n                  </div>\r\n                  {\r\n                    propertytype === \"none\" ? (null) :\r\n                      (null)\r\n\r\n                  }\r\n                  {\r\n                    propertytype === \"Land/Plot\" ? (<div className=\"col-md-6\">\r\n                      <label>Property Sub Type<span style={{ color: \"red\" }}>*</span></label>\r\n                      <select disabled className=\"form-control\" name=\"subtype\" value={propertysubtype} onChange={(event) => {\r\n                        setpropertysubtype(event.target.value);\r\n                      }}>\r\n                        <option value=\"openLand\">Open Land</option>\r\n                        <option value=\"ResidentialPlot\">Residential Plot</option>\r\n                        <option value=\"Commercial\">Commercial Plot</option>\r\n                        <option value=\"AgriculturalLand\">Agricultural Land</option>\r\n                        <option value=\"IndustrialLand\">Industrial Plot</option>\r\n                      </select>\r\n                    </div>) :\r\n                      (null)\r\n\r\n                  }\r\n                  {\r\n                    propertytype === \"Buildings\" ?\r\n                      (<div className=\"col-md-6\">\r\n                        <label>Property Sub Type<span style={{ color: \"red\" }}>*</span></label>\r\n                        <select disabled className=\"form-control\" name=\"type\" value={propertysubtype} onChange={(event) => {\r\n                          setpropertysubtype(event.target.value)\r\n                        }}>\r\n                          <option value=\"HouseProperty\">House Property</option>\r\n                          <option value=\"Villa\">Villa</option>\r\n                          <option value=\"FarmHouse\">Farm House</option>\r\n                          <option value=\"Mall\">Mall</option>\r\n                          <option value=\"Apartment\">Apartment</option>\r\n                          <option value=\"AprtmentBlock\">Apartment Block</option>\r\n                          <option value=\"Hotel\">Hotel</option>\r\n                          <option value=\"IndustrialBuilding\">Industrial Building</option>\r\n                          <option value=\"PentHouse\">Pent House</option>\r\n\r\n                        </select>\r\n                      </div>) : (null)\r\n\r\n                  }\r\n\r\n                  <div className=\"col-md-6 form-group\">\r\n                    <label>Property Purpose<span style={{ color: \"red\" }}>*</span></label>\r\n                    <select disabled className=\"form-control\" name=\"status\" value={propertypurpose} onChange={(event) => { setpropertypurpose(event.target.value) }}>\r\n                      <option value=\"none\">none</option>\r\n                      <option value=\"Sale\">Sale</option>\r\n                      <option value=\"Purchase\">Purchase</option>\r\n                      <option value=\"Rent\">Rent</option>\r\n\r\n\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6 form-group\">\r\n                    <label>Property Price<span style={{ color: \"red\" }}>*</span></label>\r\n                    <div className=\"input-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">PKR</span>\r\n                      </div>\r\n                      <input disabled type=\"text\" className=\"form-control\" name=\"price\" value={propertyprice} onChange={(event) => { setpropertyprice(event.target.value) }} placeholder=\"Property Price\" />\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <div className=\"row\">\r\n\r\n                      <div className=\"col-md-6\">\r\n\r\n                        <label>Area Type<span style={{ color: \"red\" }}>*</span></label>\r\n                        <select disabled className=\"form-control\" name=\"type\" value={propertyareatype}\r\n                          onChange={event => setpropertyareatype(event.target.value)}\r\n\r\n                        >\r\n                          <option value=\"none\">None</option>\r\n                          <option value=\"squarefoot\">Square foot</option>\r\n                          <option value=\"yard\">Yards</option>\r\n                          <option value=\"marla\">Marla</option>\r\n                          <option value=\"kanal\">Kanal</option>\r\n                          <option value=\"moza\">Moza</option>\r\n\r\n                          <option value=\"acre\">Acre</option>\r\n\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <label>Area<span style={{ color: \"red\" }}>*</span></label>\r\n                        <input disabled type=\"text\" className=\"form-control\" placeholder=\"Area \" value={propertyspace} onChange={(event) => { setpropertyspace(event.target.value) }} name=\"space\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"form-group\">\r\n                    <label>Property Gallery</label>\r\n                    {\r\n                      listinggallery.map((item) => {\r\n                        return <img src={item.img_path} alt=\"image gallery\" style={{ width: \"300px\", height: \"250px\" }} />\r\n                      })\r\n                    }\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <label>City</label>\r\n                    <input disabled type=\"text\" name=\"city\" className=\"form-control\" value={propertycity} placeholder=\"City\" onChange={(event) => { setpropertycity(event.target.value) }} />\r\n                  </div>\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <label>Address</label>\r\n                    <input disabled type=\"text\" name=\"address\" className=\"form-control\" value={propertyaddress} placeholder=\"Address\" onChange={(event) => { setpropertyaddress(event.target.value) }} />\r\n                  </div>\r\n                  <div className=\"col-md-12 form-group\">\r\n                    <label>Country</label>\r\n                    <input disabled type=\"text\" name=\"country\" className=\"form-control\" value={propertycountry} placeholder=\"Country\" onChange={(event) => { setpropertycountry(event.target.value) }} />\r\n                  </div>\r\n\r\n                </div>\r\n              </Container>\r\n\r\n            )}\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n\r\n          <Button variant=\"secondary\" onClick={() => {\r\n            toggleEditPropertyModal(false);\r\n          }}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal\r\n        style={{ zIndex: '10000000' }}\r\n        show={visible1}\r\n        centered\r\n        size=\"lg\"\r\n      >\r\n        <Modal.Header style={{ backgroundColor: \"#CAAE59\", color: \"white\" }}>\r\n\r\n          <Modal.Title>\r\n            Delete Property\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <h3>Do you want to delete this property</h3>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={async () => {\r\n\r\n            try {\r\n              await axios.patch(globalvariables.data.Basicapi + \"deleteProperty\",\r\n                {\r\n                  'property_ID': property_ID,\r\n                },\r\n                {\r\n                  headers: {\r\n                    'Content-Type': 'application/json',\r\n                  },\r\n                })\r\n                .then(async (response) => {\r\n                  console.log(\"property Deleted successfully\");\r\n                  setvisible1(false);\r\n\r\n\r\n                })\r\n                .catch(error => {\r\n                  alert(\"in catch of axios while Deleteing property\", error.toString());\r\n                });\r\n            } catch (error) {\r\n              console.log(error);\r\n              alert(\"in try catch while deleting property\", error.toString());\r\n\r\n            }\r\n          }}>\r\n            Delete\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={() => {\r\n            setvisible1(false);\r\n          }}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n  withStyles(Styles)\r\n)(MembersArea);\r\n","export const cardViewStyle={\r\n    borderRadius: '15px',\r\n    backgroundColor: '#fff',\r\n    padding: '5px 15px',\r\n    marginTop: '15px'\r\n};\r\n\r\nexport const deleteIconColor={\r\n    color:'#E74C3C'\r\n}\r\nexport const infoIconColor={\r\n    color:'#2ECC71'\r\n}\r\nexport const editIconColor={\r\n    color:'#3498DB'\r\n}\r\n\r\nexport const componentTopMargin={\r\n    marginTop:'20px'\r\n}","export default __webpack_public_path__ + \"static/media/noData.dbd309de.svg\";","import React from 'react';\r\nimport {Empty} from 'antd';\r\nimport noData from '../style/noData.svg';\r\n\r\nexport default function Area(){\r\n    return(\r\n        <Empty\r\n        \r\n            image={noData}\r\n            imageStyle={{\r\n                height: 60,\r\n            }}\r\n            description={<p style={{marginTop:'8px'}}>\r\n                No Data Found\r\n              </p>}/>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nexport default function ExportCsvButton(props){\r\n    const handleClick=()=>{\r\n        props.onExport();\r\n    }\r\n    return(\r\n        <Button \r\n            color=\"primary\"\r\n            onClick={handleClick}\r\n            style={{\r\n            float:'right',\r\n            color:'#fff',\r\n            backgroundColor:'#4D80E4'\r\n            }}\r\n            >\r\n                Export CSV\r\n            </Button>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nexport default function ClearButton(props){\r\n    const handleClick=()=>{\r\n        props.onClear();\r\n    }\r\n    return(\r\n        <Button \r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={handleClick}\r\n            style={{\r\n            marginTop:'15px',\r\n            marginBottom:'15px',\r\n            backgroundColor:'#4D80E4',\r\n            color:'#fff'\r\n            }}\r\n            >\r\n                Clear\r\n            </Button>\r\n    );\r\n}","import React from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ExportCsvButton from '../../ExportCsvButton/ExportCsvButton.js';\r\nimport \"react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport ClearButton from '../../ClearButton/ClearButton';\r\nimport EmptyArea from '../../EmptyArea/EmptyArea.js';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { cardViewStyle } from '../design';\r\nconst { SearchBar } = Search;\r\nconst rowClasses = (row, rowIndex) => {\r\n  const style = {};\r\n  style.backgroundColor=\"#FFF\";\r\n  style.whiteSpace=\"normal\";\r\n  style.overflowWrap=\"break-word\";\r\n  if (row.IsBlocked === \"1\") {\r\n    style.backgroundColor = '#F5B041';\r\n  }\r\n  return style;\r\n};\r\nexport default function TableViewTemplate({\r\n  keyField,\r\n  data,\r\n  columns,\r\n  addButtonText = '',\r\n  tabTitle = '',\r\n  exportCsvButtonShow = false,\r\n  addButtonShow = false,\r\n  addButtonOnClick }) {\r\n  const sizePerPageRenderer = ({\r\n    options,\r\n    currSizePerPage,\r\n    onSizePerPageChange,\r\n  }) => (\r\n      <div className=\"btn-group\" role=\"group\">\r\n        {options.map((option) => {\r\n          const isSelect = currSizePerPage === `${option.page}`;\r\n          return (\r\n            <button\r\n              key={option.text}\r\n              type=\"button\"\r\n              onClick={() => onSizePerPageChange(option.page)}\r\n              className={`btn ${isSelect ? \"btn-secondary\" : \"btn-warning\"}`}\r\n            >\r\n              {option.text}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n\r\n  const options = {\r\n    sizePerPageRenderer,\r\n  };\r\n  function indication() {\r\n    return <EmptyArea />;\r\n  }\r\n  return (\r\n    <ToolkitProvider\r\n      keyField={keyField}\r\n      data={data}\r\n      columns={columns}\r\n      search\r\n      exportCSV={ {\r\n        onlyExportFiltered:true,\r\n         exportAll: false \r\n      } }\r\n      >\r\n      {(props) => (\r\n        <div>\r\n          <div style={cardViewStyle}>\r\n            <h4>Search</h4>\r\n            <SearchBar {...props.searchProps} />\r\n            <ClearButton {...props.searchProps} />\r\n          </div>\r\n          <div style={cardViewStyle}>\r\n            <h4>{tabTitle}</h4>\r\n            {addButtonShow ?\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<AddIcon />}\r\n                onClick={addButtonOnClick}\r\n                style={{\r\n                  color: \"#fff\",\r\n                  backgroundColor: '#4D80E4',\r\n                  width: '15%',\r\n                  marginBottom:'2.5%',\r\n                  whiteSpace: 'nowrap',\r\n                  float:'right'\r\n                }}>\r\n                {addButtonText}\r\n              </Button>\r\n              :\r\n              <></>\r\n            }\r\n          \r\n            <BootstrapTable\r\n              {...props.baseProps}\r\n              bordered={false}\r\n              pagination={paginationFactory(options)}\r\n              noDataIndication={indication}\r\n              rowStyle={rowClasses} />\r\n              \r\n          </div>\r\n          {exportCsvButtonShow ?\r\n                                <ExportCsvButton {...props.csvProps}/>\r\n                                :\r\n                                <></>\r\n                            }\r\n        </div>\r\n      )}\r\n    </ToolkitProvider>\r\n  );\r\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;"],"sourceRoot":""}