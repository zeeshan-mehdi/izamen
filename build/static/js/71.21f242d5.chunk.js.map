{"version":3,"sources":["components/Dashboard/AgentArea/AgentsProperties.js","components/Dashboard/style/design.js","components/Dashboard/style/noData.svg","components/Dashboard/EmptyArea/EmptyArea.js","components/Dashboard/ExportCsvButton/ExportCsvButton.js","components/Dashboard/ClearButton/ClearButton.js","components/Dashboard/style/TableViewTemplate/TableViewTemplate.js","../node_modules/@material-ui/icons/Info.js","../node_modules/@material-ui/icons/Edit.js"],"names":["compose","withStyles","theme","root","flexGrow","color","root1","minWidth","internal","backGroundColor","bullet","display","margin","transform","title","fontSize","pos","marginBottom","props","classes","useState","setrowdata","visible","setvisible","propertytype","setpropertytype","propertydescription","setpropertydescription","propertysubtype","setpropertysubtype","propertypurpose","setpropertypurpose","propertyprice","setpropertyprice","propertyspace","setpropertyspace","propertyaddress","setpropertyaddress","propertycity","setpropertycity","propertycountry","setpropertycountry","propertytitle","setpropertytitle","propertyareatype","setpropertyareatype","agent","setagent","agents","setagents","dataField","text","sort","formatter","cell","row","agent_ID","style","src","alt","rowIndex","formatExtraData","onClick","placement","infoIconColor","marginLeft","property_type","description","property_purpose","price","area","address","city","country","area_type","onedit","editIconColor","deleteIconColor","propetycolums","properties","Setproperties","getUploadParams","a","file","meta","name","url","updateproperty","newdate","Date","month","getMonth","year","getYear","date","getDate","seconds","getSeconds","minutes","getMinutes","hour","getHours","uid","localStorage","getItem","axios","post","globalvariables","data","Basicapi","headers","then","response","console","log","catch","error","alert","toString","useEffect","user_ID1","user_ID","res","length","get","fluid","to","className","keyField","columns","addButtonText","tabTitle","addButtonOnClick","exportCsvButtonShow","addButtonShow","zIndex","show","centered","size","Header","backgroundColor","Title","Body","type","placeholder","onChange","event","target","value","rows","map","item","firstName","lastName","email","onChangeStatus","status","accept","styles","dropzone","minHeight","maxHeight","Footer","variant","cardViewStyle","borderRadius","padding","marginTop","Area","image","noData","imageStyle","height","ExportCsvButton","Button","onExport","float","ClearButton","onClear","SearchBar","Search","rowClasses","IsBlocked","TableViewTemplate","options","sizePerPageRenderer","currSizePerPage","onSizePerPageChange","role","option","isSelect","page","indication","EmptyArea","search","exportCSV","onlyExportFiltered","exportAll","searchProps","startIcon","width","whiteSpace","baseProps","bordered","pagination","paginationFactory","noDataIndication","rowStyle","csvProps","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d"],"mappings":"oYAklBeA,sBACbC,aAriBa,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJC,SAAU,EACVC,MAAO,uBAETC,MAAO,CACLC,SAAU,KAEZC,SAAU,CACRC,gBAAiB,WAEnBC,OAAQ,CACNC,QAAS,eACTC,OAAQ,QACRC,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,QAghBHjB,EA3gBf,SAA0BkB,GACJA,EAAZC,QAAR,IAEA,EAA4BC,mBAAS,IAArC,mBAAcC,GAAd,WACA,EAA4BD,oBAAS,GAArC,mBAAKE,EAAL,KAAcC,EAAd,KAEA,EAAsCH,mBAAS,IAA/C,mBAAKI,EAAL,KAAmBC,EAAnB,KACA,EAAoDL,mBAAS,IAA7D,mBAAKM,EAAL,KAA0BC,EAA1B,KACA,EAA4CP,mBAAS,IAArD,mBAAKQ,EAAL,KAAsBC,EAAtB,KACA,EAA4CT,mBAAS,IAArD,mBAAKU,EAAL,KAAsBC,EAAtB,KACA,EAAwCX,mBAAS,IAAjD,mBAAKY,EAAL,KAAoBC,EAApB,KACA,EAAwCb,mBAAS,IAAjD,mBAAKc,EAAL,KAAoBC,EAApB,KACA,EAAgDf,mBAAS,IAAzD,mBACA,GADA,UAC0CA,mBAAS,KAAnD,mBACA,IADA,UAC4CA,mBAAS,KAArD,qBAAKgB,GAAL,MAAsBC,GAAtB,MACA,GAAsCjB,mBAAS,IAA/C,qBAAKkB,GAAL,MAAmBC,GAAnB,MACA,GAA4CnB,mBAAS,IAArD,qBAAKoB,GAAL,MAAsBC,GAAtB,MACA,GAAwCrB,mBAAS,IAAjD,qBAAKsB,GAAL,MAAoBC,GAApB,MACA,GAA8CvB,mBAAS,IAAvD,qBAAKwB,GAAL,MAAuBC,GAAvB,MACA,GAAwBzB,mBAAS,IAAjC,qBAAK0B,GAAL,MAAYC,GAAZ,MACA,GAA0B3B,mBAAS,IAAnC,qBAAK4B,GAAL,MAAaC,GAAb,MA0FA,GAA0C7B,mBAAS,CACjD,CAEE8B,UAAW,cACXC,KAAM,KACNC,MAAM,GAER,CACEF,UAAW,QACXC,KAAM,QACNC,MAAM,GAER,CACEF,UAAW,cACXC,KAAM,cACNC,MAAM,GAER,CACEF,UAAW,UACXC,KAAM,UACNC,MAAM,GAER,CACEF,UAAW,OACXC,KAAM,OACNC,MAAM,GAGR,CACEF,UAAW,OACXC,KAAM,OACNC,MAAM,GAER,CACEF,UAAW,YACXC,KAAM,YACNC,MAAM,GAER,CACEF,UAAW,gBACXC,KAAM,gBACNC,MAAM,GACL,CACDF,UAAW,eACXC,KAAM,iBACNC,MAAM,GAER,CACEF,UAAW,WACXC,KAAM,kBACNE,UAzEJ,SAAwBC,EAAMC,GAC5B,OAAIA,EAAIC,SAEJ,+BACE,wBAAQC,MAAO,CAAEpD,MAAO,SAAxB,mBAMJ,wCAiEF,CACE6C,UAAW,WACXC,KAAM,cACNE,UAhEJ,SAAoBC,EAAMC,GACxB,OACE,+BACE,qBAAKG,IAAKJ,EAAMK,IAAI,oBAgExB,CACET,UAAW,UACXC,KAAM,GACNE,UA7HJ,SAAqBC,EAAMC,EAAKK,EAAUC,GACxC,OACE,qCAAE,cAAC,IAAD,CACAC,QAAS,aADT,SAKA,cAAC,IAAD,CAAShD,MAAO,UAAWiD,UAAW,QAAtC,SACE,cAAC,IAAD,CAAUN,MAAOO,UAInB,cAAC,IAAD,CACEP,MAAO,CAAEQ,WAAY,MACrBH,QAAS,YAjCjB,SAAgBP,GAEdlC,EAAWkC,GACX9B,EAAgB8B,EAAIW,eACpBvC,EAAuB4B,EAAIY,aAC3BtC,EAAmB0B,EAAI3B,iBACvBG,EAAmBwB,EAAIa,kBACvBnC,EAAiBsB,EAAIc,OACrBlC,EAAiBoB,EAAIe,MACrBjC,GAAmBkB,EAAIgB,SACvBhC,GAAgBgB,EAAIiB,MACpB/B,GAAmBc,EAAIkB,SACvB9B,GAAiBY,EAAIzC,OACrB+B,GAAoBU,EAAImB,WAGxBnD,GAAW,GAkBHoD,CAAOpB,IAHX,SAME,cAAC,IAAD,CAASzC,MAAO,OAAQiD,UAAW,QAAnC,SACE,cAAC,IAAD,CAAUN,MAAOmB,UAIrB,cAAC,IAAD,CACEnB,MAAO,CAAEQ,WAAY,MACrBH,QAAS,aAFX,SAME,cAAC,IAAD,CAAShD,MAAO,SAAUiD,UAAW,QAArC,SACE,cAAC,IAAD,CAAYN,MAAOoB,iBAkC7B,qBAAOC,GAAP,MAiEA,IAjEA,MAiEoC1D,mBAAS,KAA7C,qBAAO2D,GAAP,MAAmBC,GAAnB,MAEMC,GAAe,uCAAG,uBAAAC,EAAA,+DAASC,KAAT,EAAeC,KAAQC,KAAvB,kBACf,CAAEC,IAAK,6BADQ,2CAAH,sDAIfC,GAAc,uCAAC,0CAAAL,EAAA,sEAEbM,EAAU,IAAIC,KACdC,EAAQF,EAAQG,WAAa,EAC7BC,EAAOJ,EAAQK,UAAY,KAC3BC,EAAON,EAAQO,UACfC,EAAUR,EAAQS,aAClBC,EAAUV,EAAQW,aAClBC,EAAOZ,EAAQa,WACfC,EAAIC,aAAaC,QAAQ,WATZ,UAUXC,IAAMC,KAAKC,IAAgBC,KAAKC,SAAW,iBAC7C,CACI,QAAWP,EACX,QAAWlE,GACX,KAAQE,GACR,QAAWE,GACX,MAASE,GACT,IAAO,OACP,KAAQ,OACR,KAAQR,EACR,cAAiBV,EACjB,iBAAoBM,EACpB,MAASE,EACT,aAAgB4D,EAAO,IAAMF,EAAQ,IAAMI,EAAO,IAAMM,EAAO,IAAMF,EAAU,IAAMF,EACrF,UAAapD,GACb,SAAYhB,EACZ,YAAeF,EACf,SAAYoB,IAGhB,CACIgE,QAAS,CACL,eAAgB,sBAGvBC,KAzBC,+BAAA7B,EAAA,MAyBI,WAAO8B,GAAP,SAAA9B,EAAA,sDAyBF+B,QAAQC,IAAI,8BAA+BF,GAzBzC,2CAzBJ,uDAqDDG,OAAM,SAAAC,GACHC,MAAM,8CAA+CD,EAAME,eAhElD,0DAmEjBL,QAAQC,IAAR,MACAG,MAAM,yCAA0C,KAAMC,YApErC,0DAAD,qDA4HpB,OA9CAC,oBAAS,sBAAC,8BAAArC,EAAA,sEAEFsC,EAAWjB,aAAaC,QAAQ,WAF9B,SAGYC,IAAMC,KAAKC,IAAgBC,KAAKC,SAAW,sBAC3D,CACEY,QAASD,GAEX,CACEV,QAAS,CACP,eAAgB,sBAThB,OAGAY,EAHA,OAYNT,QAAQC,IAAI,8BAA+BQ,EAAId,MAC3Cc,EAAId,KAAKe,OAAS,GACpB3C,GAAc0C,EAAId,MAdd,gDAmBNS,MAAM,uCAAwC,KAAMC,YAnB9C,yDAuBP,IAEHC,oBAAS,sBAAC,4BAAArC,EAAA,+EAEYuB,IAAMmB,IAAIjB,IAAgBC,KAAKC,SAAW,eAC1D,CACEC,QAAS,CACP,eAAgB,sBALhB,OAEAY,EAFA,OAQNT,QAAQC,IAAI,0BAA2BQ,EAAId,MACvCc,EAAId,KAAKe,OAAS,GACpB1E,GAAUyE,EAAId,MAVV,gDAeNS,MAAM,mCAAoC,KAAMC,YAf1C,yDAmBP,IAGD,qCACE,eAAC,IAAD,CAAWO,OAAK,EAAhB,UAEE,cAAC,IAAD,CAAMC,GAAG,kBAAkBC,UAAU,qBAArC,0BAEA,cAAC,IAAD,CACEC,SAAU,cACVpB,KAAM7B,GACNkD,QAASnD,GACToD,cAAe,eACfC,SAAU,aACVC,iBAAkB,aAGlBC,qBAAqB,EACrBC,eAAe,OAMnB,eAAC,IAAD,CACE7E,MAAO,CAAE8E,OAAQ,YACjBC,KAAMlH,EACNmH,UAAQ,EACRC,KAAK,KAJP,UAME,cAAC,IAAMC,OAAP,CAAclF,MAAO,CAAEmF,gBAAiB,UAAWvI,MAAO,SAA1D,SAEE,cAAC,IAAMwI,MAAP,8BAIF,cAAC,IAAMC,KAAP,UACE,8BACE,eAAC,IAAD,WACE,sBAAKf,UAAU,MAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBAAOgB,KAAK,OAAO1D,KAAK,QAAQ0C,UAAU,eAAeiB,YAAY,QAAQC,SAAU,SAACC,GAAYvG,GAAiBuG,EAAMC,OAAOC,aAEpI,sBAAKrB,UAAU,uBAAf,UACE,yDACA,0BAAU1C,KAAK,UAAU+D,MAAO1H,EAAqBuH,SAAU,SAACC,GAAYvH,EAAuBuH,EAAMC,OAAOC,QAAUC,KAAM,EAAGtB,UAAU,eAAeiB,YAAY,4BAE1K,sBAAKjB,UAAU,uBAAf,UACE,+CAAiB,sBAAMtE,MAAO,CAAEpD,MAAO,OAAtB,kBACjB,wBAAQ0H,UAAU,eAAe1C,KAAK,SAAS4D,SAAU,SAACC,GAAYnG,GAASmG,EAAMC,OAAOC,QAA5F,SACGpG,GAAOsG,KAAI,SAACC,GACX,OAAO,wBAAQH,MAAOG,EAAK/F,SAApB,SAA+B+F,EAAKC,UAAW,IAAKD,EAAKE,SAAU,IAAKF,EAAKG,gBAS1F,sBAAK3B,UAAU,WAAf,UACE,kDAAoB,sBAAMtE,MAAO,CAAEpD,MAAO,OAAtB,kBACpB,yBAAQ0H,UAAU,eAAe1C,KAAK,OACpC4D,SAAU,SAAAC,GAAK,OAAIzH,EAAgByH,EAAMC,OAAOC,QAChDA,MAAO5H,EAFT,UAIE,wBAAQ4H,MAAM,OAAd,kBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,6BAKyB,KAKV,cAAjB5H,EAAgC,sBAAKuG,UAAU,WAAf,UAC9B,sDAAwB,sBAAMtE,MAAO,CAAEpD,MAAO,OAAtB,kBACxB,yBAAQ0H,UAAU,eAAe1C,KAAK,UAAU+D,MAAOxH,EAAiBqH,SAAU,SAACC,GACjFrH,EAAmBqH,EAAMC,OAAOC,QADlC,UAGE,wBAAQA,MAAM,WAAd,uBACA,wBAAQA,MAAM,kBAAd,8BACA,wBAAQA,MAAM,aAAd,6BACA,wBAAQA,MAAM,mBAAd,+BACA,wBAAQA,MAAM,iBAAd,mCAGD,KAIc,cAAjB5H,EACG,sBAAKuG,UAAU,WAAf,UACC,sDAAwB,sBAAMtE,MAAO,CAAEpD,MAAO,OAAtB,kBACxB,yBAAQ0H,UAAU,eAAe1C,KAAK,OAAO+D,MAAOxH,EAAiBqH,SAAU,SAACC,GAC9ErH,EAAmBqH,EAAMC,OAAOC,QADlC,UAGE,wBAAQA,MAAM,gBAAd,4BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,wBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,gBAAd,6BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,qBAAd,iCACA,wBAAQA,MAAM,YAAd,8BAGO,KAIf,sBAAKrB,UAAU,sBAAf,UACE,qDAAuB,sBAAMtE,MAAO,CAAEpD,MAAO,OAAtB,kBACvB,yBAAQ0H,UAAU,eAAe1C,KAAK,SAAS+D,MAAOtH,EAAiBmH,SAAU,SAACC,GAAYnH,EAAmBmH,EAAMC,OAAOC,QAA9H,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,OAAd,wBAMJ,sBAAKrB,UAAU,sBAAf,UACE,mDAAqB,sBAAMtE,MAAO,CAAEpD,MAAO,OAAtB,kBACrB,sBAAK0H,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,mBAEF,uBAAOgB,KAAK,OAAOhB,UAAU,eAAe1C,KAAK,QAAQ+D,MAAOpH,EAAeiH,SAAU,SAACC,GAAYjH,EAAiBiH,EAAMC,OAAOC,QAAUJ,YAAY,yBAM9J,qBAAKjB,UAAU,uBAAf,SACE,sBAAKA,UAAU,MAAf,UAEE,sBAAKA,UAAU,WAAf,UAEE,8CAAgB,sBAAMtE,MAAO,CAAEpD,MAAO,OAAtB,kBAChB,yBAAQ0H,UAAU,eAAe1C,KAAK,OAAO+D,MAAOxG,GAClDqG,SAAU,SAAAC,GAAK,OAAIrG,GAAoBqG,EAAMC,OAAOC,QADtD,UAIE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,aAAd,yBACA,wBAAQA,MAAM,OAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBAEA,wBAAQA,MAAM,OAAd,wBAIJ,sBAAKrB,UAAU,WAAf,UACE,yCAAW,sBAAMtE,MAAO,CAAEpD,MAAO,OAAtB,kBACX,uBAAO0I,KAAK,OAAOhB,UAAU,eAAeiB,YAAY,QAAQI,MAAOlH,EAAe+G,SAAU,SAACC,GAAY/G,EAAiB+G,EAAMC,OAAOC,QAAU/D,KAAK,qBAKlK,qBAAK0C,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qDAIA,cAAC,IAAD,CACE9C,gBAAiBA,GACjB0E,eAhOS,SAAC,EAAUC,GAAY,IAApBxE,EAAmB,EAAnBA,KAC5B6B,QAAQC,IAAI0C,EAAQxE,IAiOJyE,OAAO,UACPC,OAAQ,CAAEC,SAAU,CAAEC,UAAW,IAAKC,UAAW,QAGnD,sBAAMlC,UAAU,kBAAhB,8DACA,sBAAMA,UAAU,kBAAhB,0EAGJ,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,yCACA,uBAAOgB,KAAK,OAAO1D,KAAK,OAAO0C,UAAU,eAAeqB,MAAO9G,GAAc0G,YAAY,OAAOC,SAAU,SAACC,GAAY3G,GAAgB2G,EAAMC,OAAOC,aAEtJ,sBAAKrB,UAAU,uBAAf,UACE,4CACA,uBAAOgB,KAAK,OAAO1D,KAAK,UAAU0C,UAAU,eAAeqB,MAAOhH,GAAiB4G,YAAY,UAAUC,SAAU,SAACC,GAAY7G,GAAmB6G,EAAMC,OAAOC,aAElK,sBAAKrB,UAAU,uBAAf,UACE,4CACA,uBAAOgB,KAAK,OAAO1D,KAAK,UAAU0C,UAAU,eAAeqB,MAAO5G,GAAiBwG,YAAY,UAAUC,SAAU,SAACC,GAAYzG,GAAmByG,EAAMC,OAAOC,aAGlK,wBAAQrB,UAAU,aAAajE,QAASyB,GAAxC,sCAMR,cAAC,IAAM2E,OAAP,UACE,cAAC,IAAD,CAAQC,QAAQ,YAAYrG,QAAS,WACnCvC,GAAW,IADb,+B,iCCrkBV,wIAAO,IAAM6I,EAAc,CACvBC,aAAc,OACdzB,gBAAiB,OACjB0B,QAAS,WACTC,UAAW,QAGF1F,EAAgB,CACzBxE,MAAM,WAEG2D,EAAc,CACvB3D,MAAM,WAEGuE,EAAc,CACvBvE,MAAM,Y,sFCdK,MAA0B,mC,OCI1B,SAASmK,IACpB,OACI,cAAC,IAAD,CAEIC,MAAOC,EACPC,WAAY,CACRC,OAAQ,IAEZzG,YAAa,mBAAGV,MAAO,CAAC8G,UAAU,OAArB,+B,6JCVV,SAASM,EAAgB3J,GAIpC,OACI,cAAC4J,EAAA,EAAD,CACIzK,MAAM,UACNyD,QANU,WACd5C,EAAM6J,YAMFtH,MAAO,CACPuH,MAAM,QACN3K,MAAM,OACNuI,gBAAgB,WANpB,wB,cCLO,SAASqC,EAAY/J,GAIhC,OACI,cAAC4J,EAAA,EAAD,CACIzK,MAAM,UACN8J,QAAQ,YACRrG,QAPU,WACd5C,EAAMgK,WAOFzH,MAAO,CACP8G,UAAU,OACVtJ,aAAa,OACb2H,gBAAgB,UAChBvI,MAAM,QARV,mB,wCCOA8K,EAAcC,SAAdD,UACFE,EAAa,SAAC9H,EAAKK,GACvB,IAAMH,EAAQ,CACdA,gBAAsB,OACtBA,WAAiB,SACjBA,aAAmB,cAInB,MAHsB,MAAlBF,EAAI+H,YACN7H,EAAMmF,gBAAkB,WAEnBnF,GAEM,SAAS8H,EAAT,GAQQ,IAPrBvD,EAOoB,EAPpBA,SACApB,EAMoB,EANpBA,KACAqB,EAKoB,EALpBA,QAKoB,IAJpBC,qBAIoB,MAJJ,GAII,MAHpBC,gBAGoB,MAHT,GAGS,MAFpBE,2BAEoB,aADpBC,qBACoB,SAApBF,EAAoB,EAApBA,iBAuBMoD,EAAU,CACdC,oBAvB0B,SAAC,GAAD,IAC1BD,EAD0B,EAC1BA,QACAE,EAF0B,EAE1BA,gBACAC,EAH0B,EAG1BA,oBAH0B,OAKxB,qBAAK5D,UAAU,YAAY6D,KAAK,QAAhC,SACGJ,EAAQlC,KAAI,SAACuC,GACZ,IAAMC,EAAWJ,IAAe,UAAQG,EAAOE,MAC/C,OACE,wBAEEhD,KAAK,SACLjF,QAAS,kBAAM6H,EAAoBE,EAAOE,OAC1ChE,UAAS,cAAS+D,EAAW,gBAAkB,eAJjD,SAMGD,EAAO1I,MALH0I,EAAO1I,aAexB,SAAS6I,IACP,OAAO,cAACC,EAAA,EAAD,IAET,OACE,cAAC,IAAD,CACEjE,SAAUA,EACVpB,KAAMA,EACNqB,QAASA,EACTiE,QAAM,EACNC,UAAY,CACVC,oBAAmB,EAClBC,WAAW,GAPhB,SAUG,SAACnL,GAAD,OACC,gCACE,sBAAKuC,MAAO2G,IAAZ,UACE,wCACA,cAACe,EAAD,eAAejK,EAAMoL,cACrB,cAACrB,EAAD,eAAiB/J,EAAMoL,iBAEzB,sBAAK7I,MAAO2G,IAAZ,UACE,6BAAKjC,IACJG,EACC,cAACwC,EAAA,EAAD,CACEzK,MAAM,UACNkM,UAAW,cAAC,IAAD,IACXzI,QAASsE,EACT3E,MAAO,CACLpD,MAAO,OACPuI,gBAAiB,UACjB4D,MAAO,MACPvL,aAAa,OACbwL,WAAY,SACZzB,MAAM,SAVV,SAYG9C,IAGH,6BAGF,cAAC,IAAD,2BACMhH,EAAMwL,WADZ,IAEEC,UAAU,EACVC,WAAYC,IAAkBrB,GAC9BsB,iBAAkBd,EAClBe,SAAU1B,QAGbhD,EACqB,cAACwC,EAAD,eAAqB3J,EAAM8L,WAE3B,qC,iCC9GhC,IAAIC,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3ClE,OAAO,IAETkE,EAAQC,aAAU,EAElB,IAAIC,EAAQL,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBK,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,qGACD,QAEJL,EAAQC,QAAUE,G,iCCjBlB,IAAIR,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3ClE,OAAO,IAETkE,EAAQC,aAAU,EAElB,IAAIC,EAAQL,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBK,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,wJACD,QAEJL,EAAQC,QAAUE","file":"static/js/71.21f242d5.chunk.js","sourcesContent":["\r\n/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n// import PieChart from \"../common/PieCharts\";\r\n// import CustomBarChart from \"../common/BarChart\";\r\n// import {\r\n//   Box,\r\n\r\n//   Grid,\r\n//   makeStyles,\r\n//   Typography,\r\n// } from \"@material-ui/core\";\r\nimport { Container, Row, Col, Tab, Tabs, Modal, Card, Button } from \"react-bootstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport \"react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n// import { getOrdersDate } from \"../../redux/actions/orderActions\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n\r\n\r\n  componentTopMargin,\r\n  deleteIconColor,\r\n  editIconColor,\r\n  infoIconColor\r\n} from \"../style/design\";\r\n\r\nimport 'react-dropzone-uploader/dist/styles.css'\r\nimport Dropzone from 'react-dropzone-uploader';\r\nimport EmptyArea from \"../EmptyArea/EmptyArea\";\r\nimport TableViewTemplate from \"../style/TableViewTemplate/TableViewTemplate\";\r\nimport globalvariables from \"../../../globalvariables\";\r\nimport axios from 'axios';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n\r\n\r\nconst Styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  root1: {\r\n    minWidth: 275,\r\n  },\r\n  internal: {\r\n    backGroundColor: \"#FFFFFF\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\n\r\nfunction AgentsProperties(props) {\r\n  const { classes } = props;\r\n\r\n  let [rowdata, setrowdata] = useState({});\r\n  let [visible, setvisible] = useState(false);\r\n\r\n  let [propertytype, setpropertytype] = useState(\"\");\r\n  let [propertydescription, setpropertydescription] = useState(\"\");\r\n  let [propertysubtype, setpropertysubtype] = useState(\"\");\r\n  let [propertypurpose, setpropertypurpose] = useState(\"\");\r\n  let [propertyprice, setpropertyprice] = useState(\"\");\r\n  let [propertyspace, setpropertyspace] = useState(\"\");\r\n  let [propertythumbnail, setpropertythumbnail] = useState(\"\");\r\n  let [propertyimages, setpropertyimages] = useState(\"\");\r\n  let [propertyaddress, setpropertyaddress] = useState(\"\");\r\n  let [propertycity, setpropertycity] = useState(\"\");\r\n  let [propertycountry, setpropertycountry] = useState(\"\");\r\n  let [propertytitle, setpropertytitle] = useState(\"\");\r\n  let [propertyareatype, setpropertyareatype] = useState(\"\");\r\n  let [agent, setagent] = useState([]);\r\n  let [agents, setagents] = useState([]);\r\n\r\n  function indication() {\r\n    return <EmptyArea />;\r\n  }\r\n\r\n\r\n  function onedit(row) {\r\n    // this.setState({ rowdata: row, fordetails: true, showdetailsofoffice: true });\r\n    setrowdata(row);\r\n    setpropertytype(row.property_type);\r\n    setpropertydescription(row.description);\r\n    setpropertysubtype(row.propertysubtype);\r\n    setpropertypurpose(row.property_purpose);\r\n    setpropertyprice(row.price);\r\n    setpropertyspace(row.area);\r\n    setpropertyaddress(row.address);\r\n    setpropertycity(row.city);\r\n    setpropertycountry(row.country);\r\n    setpropertytitle(row.title);\r\n    setpropertyareatype(row.area_type);\r\n\r\n\r\n    setvisible(true);\r\n  }\r\n\r\n  function linkFollow3(cell, row, rowIndex, formatExtraData) {\r\n    return (\r\n      <><Link\r\n        onClick={() => {\r\n          // this.onofficedetaileclicked(row);\r\n        }}\r\n      >\r\n        <Tooltip title={\"Details\"} placement={\"right\"}>\r\n          <InfoIcon style={infoIconColor} />\r\n        </Tooltip>\r\n      </Link>\r\n\r\n        <Link\r\n          style={{ marginLeft: '5%' }}\r\n          onClick={() => {\r\n            onedit(row);\r\n          }}\r\n        >\r\n          <Tooltip title={\"Edit\"} placement={\"right\"}>\r\n            <EditIcon style={editIconColor} />\r\n          </Tooltip>\r\n        </Link>\r\n\r\n        <Link\r\n          style={{ marginLeft: '5%' }}\r\n          onClick={() => {\r\n            // this.onedit(row);\r\n          }}\r\n        >\r\n          <Tooltip title={\"Delete\"} placement={\"right\"}>\r\n            <DeleteIcon style={deleteIconColor} />\r\n          </Tooltip>\r\n        </Link>\r\n      </>\r\n\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  function agentconnected(cell, row) {\r\n    if (row.agent_ID) {\r\n      return (\r\n        <span>\r\n          <strong style={{ color: 'green' }}>Yes</strong>\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <span>No</span>\r\n    );\r\n  }\r\n\r\n  function coverphoto(cell, row) {\r\n    return (\r\n      <span>\r\n        <img src={cell} alt=\"Cover Photo\" />\r\n      </span>\r\n    );\r\n\r\n\r\n  }\r\n  const [propetycolums, setpropetycolums] = useState([\r\n    {\r\n\r\n      dataField: \"property_ID\",\r\n      text: \"ID\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"title\",\r\n      text: \"Title\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"description\",\r\n      text: \"Description\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"address\",\r\n      text: \"Address\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"city\",\r\n      text: \"City\",\r\n      sort: true,\r\n    },\r\n\r\n    {\r\n      dataField: \"area\",\r\n      text: \"Area\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"area_type\",\r\n      text: \"Area Type\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"property_type\",\r\n      text: \"Property Type\",\r\n      sort: true,\r\n    }, {\r\n      dataField: \"dateOfAdvert\",\r\n      text: \"Date of Advert\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"agent_ID\",\r\n      text: \"Agent Connected\",\r\n      formatter: agentconnected\r\n    },\r\n    {\r\n      dataField: \"img_path\",\r\n      text: \"Cover Photo\",\r\n      formatter: coverphoto\r\n    },\r\n\r\n    {\r\n      dataField: \"details\",\r\n      text: \"\",\r\n      formatter: linkFollow3,\r\n    },\r\n\r\n  ])\r\n  const [properties, Setproperties] = useState([]);\r\n\r\n  const getUploadParams = async ({ file, meta: { name } }) => {\r\n    return { url: 'https://httpbin.org/post' }\r\n\r\n  }\r\n  const updateproperty=async ()=>{\r\n    try {\r\n      let newdate = new Date();\r\n      let month = newdate.getMonth() + 1;\r\n      let year = newdate.getYear() + 1900;\r\n      let date = newdate.getDate();\r\n      let seconds = newdate.getSeconds();\r\n      let minutes = newdate.getMinutes();\r\n      let hour = newdate.getHours();\r\n      let uid=localStorage.getItem(\"user_ID\")\r\n      await axios.post(globalvariables.data.Basicapi + \"updateProperty\",\r\n          {\r\n              'user_ID': uid,\r\n              'address': propertyaddress,\r\n              'city': propertycity,\r\n              'country': propertycountry,\r\n              'title': propertytitle,\r\n              'lat': '34.3',\r\n              'long': '22.3',\r\n              'area': propertyspace,\r\n              'property_type': propertytype,\r\n              'property_purpose': propertypurpose,\r\n              'price': propertyprice,\r\n              'dateOfAdvert': year + \"-\" + month + \"-\" + date + \" \" + hour + \":\" + minutes + \":\" + seconds,\r\n              'area_type': propertyareatype,\r\n              'sub_type': propertysubtype,\r\n              'description': propertydescription,\r\n              'agent_ID': agent,\r\n              // 'img_path':coverphoto\r\n          },\r\n          {\r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n              },\r\n          })\r\n          .then(async (response) => {\r\n              // console.log(\"imaes for properties\",images)\r\n              // images.forEach(async (image) => {\r\n\r\n              //     var s3Endpoint = await axios.get(\"https://pyd24ltfqe.execute-api.ap-southeast-1.amazonaws.com/default/getpropertyimages\");\r\n              //     var file_name = s3Endpoint.data.photoFilename;\r\n              //     var s3UploadLink = s3Endpoint.data.uploadURL\r\n\r\n              //     console.log(\"Result\", s3UploadLink, file_name, image)\r\n              //     const result = await fetch(s3UploadLink, {\r\n              //         method: 'PUT',\r\n              //         body: image\r\n              //     })\r\n              //     setcoverphoto(\"https://induslandphotos.s3-ap-southeast-1.amazonaws.com/\" + file_name);\r\n              //     axios.post(globalvariables.data.Basicapi + \"addPropertyImage\",\r\n              //         {\r\n              //             property_ID: response.data.property_ID,\r\n              //             img_link: \"https://induslandphotos.s3-ap-southeast-1.amazonaws.com/\" + file_name\r\n              //         },\r\n              //         {\r\n              //             headers: {\r\n              //                 'Content-Type': 'application/json',\r\n              //             },\r\n              //         })\r\n              // })\r\n              console.log(\"property added successfully\", response);\r\n            \r\n          })\r\n          .catch(error => {\r\n              alert(\"in catch of axios while submitting property\", error.toString());\r\n          });\r\n  } catch (error) {\r\n      console.log(error);\r\n      alert(\"in try catch while submitting property\", error.toString());\r\n\r\n  }\r\n  }\r\n\r\n\r\n  const handleChangeStatus = ({ meta }, status) => {\r\n    console.log(status, meta)\r\n  }\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      let user_ID1 = localStorage.getItem(\"user_ID\")\r\n      const res = await axios.post(globalvariables.data.Basicapi + \"getPropertyOnUserID\",\r\n        {\r\n          user_ID: user_ID1\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting properties\", res.data);\r\n      if (res.data.length > 0) {\r\n        Setproperties(res.data)\r\n\r\n      }\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting properties\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(globalvariables.data.Basicapi + \"getAllAgents\",\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting agents\", res.data);\r\n      if (res.data.length > 0) {\r\n        setagents(res.data)\r\n\r\n      }\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting agents\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n\r\n        <Link to=\"/submit-listing\" className=\"btn-custom primary\">Add Property</Link>\r\n\r\n        <TableViewTemplate\r\n          keyField={\"property_ID\"}\r\n          data={properties}\r\n          columns={propetycolums}\r\n          addButtonText={\"Add Property\"}\r\n          tabTitle={\"Properties\"}\r\n          addButtonOnClick={() => { }\r\n            // setdisplaymodal(true)\r\n          }\r\n          exportCsvButtonShow={true}\r\n          addButtonShow={false}\r\n        />\r\n\r\n\r\n      </Container>\r\n\r\n      <Modal\r\n        style={{ zIndex: '10000000' }}\r\n        show={visible}\r\n        centered\r\n        size=\"lg\"\r\n      >\r\n        <Modal.Header style={{ backgroundColor: \"#CAAE59\", color: \"white\" }}>\r\n\r\n          <Modal.Title>\r\n            Edit Property\r\n</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <Container>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label>Title</label>\r\n                  <input type=\"text\" name=\"title\" className=\"form-control\" placeholder=\"Title\" onChange={(event) => { setpropertytitle(event.target.value) }} />\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label>Property Description</label>\r\n                  <textarea name=\"content\" value={propertydescription} onChange={(event) => { setpropertydescription(event.target.value) }} rows={4} className=\"form-control\" placeholder=\"Property Description\" />\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label>Edit Agent<span style={{ color: \"red\" }}>*</span></label>\r\n                  <select className=\"form-control\" name=\"status\" onChange={(event) => { setagent(event.target.value) }}>\r\n                    {agents.map((item) => {\r\n                      return <option value={item.agent_ID}>{item.firstName +\" \"+ item.lastName +\"-\"+ item.email}</option>\r\n\r\n                    })}\r\n\r\n\r\n\r\n                  </select>\r\n                </div>\r\n       \r\n                <div className=\"col-md-6\">\r\n                  <label>Property Type<span style={{ color: \"red\" }}>*</span></label>\r\n                  <select className=\"form-control\" name=\"type\"\r\n                    onChange={event => setpropertytype(event.target.value)}\r\n                    value={propertytype}\r\n                  >\r\n                    <option value=\"none\">None</option>\r\n                    <option value=\"Land/Plot\">Land/Plot</option>\r\n                    <option value=\"Buildings\">Buildings</option>\r\n\r\n                  </select>\r\n                </div>\r\n                {\r\n                  propertytype === \"none\" ? (null) :\r\n                    (null)\r\n\r\n                }\r\n                {\r\n                  propertytype === \"Land/Plot\" ? (<div className=\"col-md-6\">\r\n                    <label>Property Sub Type<span style={{ color: \"red\" }}>*</span></label>\r\n                    <select className=\"form-control\" name=\"subtype\" value={propertysubtype} onChange={(event) => {\r\n                      setpropertysubtype(event.target.value);\r\n                    }}>\r\n                      <option value=\"openLand\">Open Land</option>\r\n                      <option value=\"ResidentialPlot\">Residential Plot</option>\r\n                      <option value=\"Commercial\">Commercial Plot</option>\r\n                      <option value=\"AgriculturalLand\">Agricultural Land</option>\r\n                      <option value=\"IndustrialLand\">Industrial Plot</option>\r\n                    </select>\r\n                  </div>) :\r\n                    (null)\r\n\r\n                }\r\n                {\r\n                  propertytype === \"Buildings\" ?\r\n                    (<div className=\"col-md-6\">\r\n                      <label>Property Sub Type<span style={{ color: \"red\" }}>*</span></label>\r\n                      <select className=\"form-control\" name=\"type\" value={propertysubtype} onChange={(event) => {\r\n                        setpropertysubtype(event.target.value)\r\n                      }}>\r\n                        <option value=\"HouseProperty\">House Property</option>\r\n                        <option value=\"Villa\">Villa</option>\r\n                        <option value=\"FarmHouse\">Farm House</option>\r\n                        <option value=\"Mall\">Mall</option>\r\n                        <option value=\"Apartment\">Apartment</option>\r\n                        <option value=\"AprtmentBlock\">Apartment Block</option>\r\n                        <option value=\"Hotel\">Hotel</option>\r\n                        <option value=\"IndustrialBuilding\">Industrial Building</option>\r\n                        <option value=\"PentHouse\">Pent House</option>\r\n\r\n                      </select>\r\n                    </div>) : (null)\r\n\r\n                }\r\n\r\n                <div className=\"col-md-6 form-group\">\r\n                  <label>Property Purpose<span style={{ color: \"red\" }}>*</span></label>\r\n                  <select className=\"form-control\" name=\"status\" value={propertypurpose} onChange={(event) => { setpropertypurpose(event.target.value) }}>\r\n                    <option value=\"none\">none</option>\r\n                    <option value=\"Sale\">Sale</option>\r\n                    <option value=\"Purchase\">Purchase</option>\r\n                    <option value=\"Rent\">Rent</option>\r\n\r\n\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 form-group\">\r\n                  <label>Property Price<span style={{ color: \"red\" }}>*</span></label>\r\n                  <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">PKR</span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" name=\"price\" value={propertyprice} onChange={(event) => { setpropertyprice(event.target.value) }} placeholder=\"Property Price\" />\r\n                  </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"col-md-12 form-group\">\r\n                  <div className=\"row\">\r\n\r\n                    <div className=\"col-md-6\">\r\n\r\n                      <label>Area Type<span style={{ color: \"red\" }}>*</span></label>\r\n                      <select className=\"form-control\" name=\"type\" value={propertyareatype}\r\n                        onChange={event => setpropertyareatype(event.target.value)}\r\n\r\n                      >\r\n                        <option value=\"none\">None</option>\r\n                        <option value=\"squarefoot\">Square foot</option>\r\n                        <option value=\"yard\">Yards</option>\r\n                        <option value=\"marla\">Marla</option>\r\n                        <option value=\"kanal\">Kanal</option>\r\n                        <option value=\"moza\">Moza</option>\r\n\r\n                        <option value=\"acre\">Acre</option>\r\n\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <label>Area<span style={{ color: \"red\" }}>*</span></label>\r\n                      <input type=\"text\" className=\"form-control\" placeholder=\"Area \" value={propertyspace} onChange={(event) => { setpropertyspace(event.target.value) }} name=\"space\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group\">\r\n                  <label>Property Gallery</label>\r\n\r\n\r\n\r\n                  <Dropzone\r\n                    getUploadParams={getUploadParams}\r\n                    onChangeStatus={handleChangeStatus}\r\n                    // onSubmit={handleSubmit}\r\n                    accept=\"image/*\"\r\n                    styles={{ dropzone: { minHeight: 200, maxHeight: 250 } }}\r\n                  />\r\n\r\n                  <span className=\"acr-form-notice\">*You can upload up to 10 images for your listing</span>\r\n                  <span className=\"acr-form-notice\">*Listing images should be atleast 620x480 in dimensions</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label>City</label>\r\n                  <input type=\"text\" name=\"city\" className=\"form-control\" value={propertycity} placeholder=\"City\" onChange={(event) => { setpropertycity(event.target.value) }} />\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label>Address</label>\r\n                  <input type=\"text\" name=\"address\" className=\"form-control\" value={propertyaddress} placeholder=\"Address\" onChange={(event) => { setpropertyaddress(event.target.value) }} />\r\n                </div>\r\n                <div className=\"col-md-12 form-group\">\r\n                  <label>Country</label>\r\n                  <input type=\"text\" name=\"country\" className=\"form-control\" value={propertycountry} placeholder=\"Country\" onChange={(event) => { setpropertycountry(event.target.value) }} />\r\n                </div>\r\n\r\n                <button className=\"btn-custom\" onClick={updateproperty} >Update Listing</button>\r\n\r\n              </div>\r\n            </Container>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => {\r\n            setvisible(false);\r\n          }}>\r\n            Close\r\n</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n  withStyles(Styles)\r\n)(AgentsProperties);\r\n","export const cardViewStyle={\r\n    borderRadius: '15px',\r\n    backgroundColor: '#fff',\r\n    padding: '5px 15px',\r\n    marginTop: '15px'\r\n};\r\n\r\nexport const deleteIconColor={\r\n    color:'#E74C3C'\r\n}\r\nexport const infoIconColor={\r\n    color:'#2ECC71'\r\n}\r\nexport const editIconColor={\r\n    color:'#3498DB'\r\n}\r\n\r\nexport const componentTopMargin={\r\n    marginTop:'20px'\r\n}","export default __webpack_public_path__ + \"static/media/noData.dbd309de.svg\";","import React from 'react';\r\nimport {Empty} from 'antd';\r\nimport noData from '../style/noData.svg';\r\n\r\nexport default function Area(){\r\n    return(\r\n        <Empty\r\n        \r\n            image={noData}\r\n            imageStyle={{\r\n                height: 60,\r\n            }}\r\n            description={<p style={{marginTop:'8px'}}>\r\n                No Data Found\r\n              </p>}/>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nexport default function ExportCsvButton(props){\r\n    const handleClick=()=>{\r\n        props.onExport();\r\n    }\r\n    return(\r\n        <Button \r\n            color=\"primary\"\r\n            onClick={handleClick}\r\n            style={{\r\n            float:'right',\r\n            color:'#fff',\r\n            backgroundColor:'#4D80E4'\r\n            }}\r\n            >\r\n                Export CSV\r\n            </Button>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nexport default function ClearButton(props){\r\n    const handleClick=()=>{\r\n        props.onClear();\r\n    }\r\n    return(\r\n        <Button \r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={handleClick}\r\n            style={{\r\n            marginTop:'15px',\r\n            marginBottom:'15px',\r\n            backgroundColor:'#4D80E4',\r\n            color:'#fff'\r\n            }}\r\n            >\r\n                Clear\r\n            </Button>\r\n    );\r\n}","import React from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ExportCsvButton from '../../ExportCsvButton/ExportCsvButton.js';\r\nimport \"react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport ClearButton from '../../ClearButton/ClearButton';\r\nimport EmptyArea from '../../EmptyArea/EmptyArea.js';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { cardViewStyle } from '../design';\r\nconst { SearchBar } = Search;\r\nconst rowClasses = (row, rowIndex) => {\r\n  const style = {};\r\n  style.backgroundColor=\"#FFF\";\r\n  style.whiteSpace=\"normal\";\r\n  style.overflowWrap=\"break-word\";\r\n  if (row.IsBlocked === \"1\") {\r\n    style.backgroundColor = '#F5B041';\r\n  }\r\n  return style;\r\n};\r\nexport default function TableViewTemplate({\r\n  keyField,\r\n  data,\r\n  columns,\r\n  addButtonText = '',\r\n  tabTitle = '',\r\n  exportCsvButtonShow = false,\r\n  addButtonShow = false,\r\n  addButtonOnClick }) {\r\n  const sizePerPageRenderer = ({\r\n    options,\r\n    currSizePerPage,\r\n    onSizePerPageChange,\r\n  }) => (\r\n      <div className=\"btn-group\" role=\"group\">\r\n        {options.map((option) => {\r\n          const isSelect = currSizePerPage === `${option.page}`;\r\n          return (\r\n            <button\r\n              key={option.text}\r\n              type=\"button\"\r\n              onClick={() => onSizePerPageChange(option.page)}\r\n              className={`btn ${isSelect ? \"btn-secondary\" : \"btn-warning\"}`}\r\n            >\r\n              {option.text}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n\r\n  const options = {\r\n    sizePerPageRenderer,\r\n  };\r\n  function indication() {\r\n    return <EmptyArea />;\r\n  }\r\n  return (\r\n    <ToolkitProvider\r\n      keyField={keyField}\r\n      data={data}\r\n      columns={columns}\r\n      search\r\n      exportCSV={ {\r\n        onlyExportFiltered:true,\r\n         exportAll: false \r\n      } }\r\n      >\r\n      {(props) => (\r\n        <div>\r\n          <div style={cardViewStyle}>\r\n            <h4>Search</h4>\r\n            <SearchBar {...props.searchProps} />\r\n            <ClearButton {...props.searchProps} />\r\n          </div>\r\n          <div style={cardViewStyle}>\r\n            <h4>{tabTitle}</h4>\r\n            {addButtonShow ?\r\n              <Button\r\n                color=\"primary\"\r\n                startIcon={<AddIcon />}\r\n                onClick={addButtonOnClick}\r\n                style={{\r\n                  color: \"#fff\",\r\n                  backgroundColor: '#4D80E4',\r\n                  width: '15%',\r\n                  marginBottom:'2.5%',\r\n                  whiteSpace: 'nowrap',\r\n                  float:'right'\r\n                }}>\r\n                {addButtonText}\r\n              </Button>\r\n              :\r\n              <></>\r\n            }\r\n          \r\n            <BootstrapTable\r\n              {...props.baseProps}\r\n              bordered={false}\r\n              pagination={paginationFactory(options)}\r\n              noDataIndication={indication}\r\n              rowStyle={rowClasses} />\r\n              \r\n          </div>\r\n          {exportCsvButtonShow ?\r\n                                <ExportCsvButton {...props.csvProps}/>\r\n                                :\r\n                                <></>\r\n                            }\r\n        </div>\r\n      )}\r\n    </ToolkitProvider>\r\n  );\r\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;"],"sourceRoot":""}