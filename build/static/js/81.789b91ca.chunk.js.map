{"version":3,"sources":["components/Dashboard/Dashboard.js"],"names":["curveCardinal","tension","compose","withStyles","theme","root","flexGrow","color","root1","minWidth","internal","backGroundColor","bullet","display","margin","transform","title","fontSize","pos","marginBottom","props","classes","useState","Membercount","SetMembercount","Agentcount","SetAgentcount","Propertycount","SetPropertycount","Projectcount","SetProjectcount","Partnercount","SetPartnercount","SetQueriescount","NotmembersCount","SetNotmembersCount","MonthlyPropertyCount","SetMonthlyPropertyCount","MonthlyMemberCount","SetMonthlyMemberCount","NotMonthlyMemberCount","SetNotMonthlyMemberCount","useEffect","a","axios","get","globalvariables","data","Basicapi","headers","res","console","log","alert","toString","fluid","style","md","to","bg","Body","Title","textAlign","Text","padding","elevation","width","height","top","right","bottom","left","stroke","dataKey","scale","barSize","fill","type","marginLeft","strokeDasharray","fillOpacity"],"mappings":"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","file":"static/js/81.789b91ca.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n// import PieChart from \"../common/PieCharts\";\r\n// import CustomBarChart from \"../common/BarChart\";\r\nimport {\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { Container, Row, Col, Tab, Tabs, Modal, Card, Button } from \"react-bootstrap\";\r\n\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n// import { getOrdersDate } from \"../../redux/actions/orderActions\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n// import { getActiveUsers } from \"../../redux/actions/userActions\";\r\n// import { getTransactionDate } from \"../../redux/actions/transactionActions\";\r\n// import { getFeedBackCount } from \"../../redux/actions/feedbackActions\";\r\n// import { getProblemCount } from \"../../redux/actions/problemActions\";\r\n// import { getSolvedProblemCount } from \"../../redux/actions/solvedproblemActions\";\r\n// import { getTotalPeers, getTotalPatrons,getTotalSignups,getTotalSignupsM_F,getTotalSignupsAgeWise } from \"../../redux/actions/userDashboardActions\";\r\n// import Card from \"@material-ui/core/Card\";\r\n// import CardActions from \"@material-ui/core/CardActions\";\r\n// import CardContent from \"@material-ui/core/CardContent\";\r\n// import Loader from \"../common/Loader\";\r\n\r\nimport globalvariables from \"../../globalvariables\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  ComposedChart,\r\n  Line,\r\n  Area,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  AreaChart\r\n} from 'recharts';\r\n\r\nimport { curveCardinal } from \"d3-shape\";\r\n\r\nconst Styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    color: \"rgba(0, 0, 0, 0.54)\",\r\n  },\r\n  root1: {\r\n    minWidth: 275,\r\n  },\r\n  internal: {\r\n    backGroundColor: \"#FFFFFF\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\nconst cardinal = curveCardinal.tension(0.2);\r\n\r\nfunction Dashboard(props) {\r\n  const { classes } = props;\r\n  const [Membercount, SetMembercount] = useState([]);\r\n  const [Agentcount, SetAgentcount] = useState([]);\r\n  const [Propertycount, SetPropertycount] = useState([]);\r\n  const [Projectcount, SetProjectcount] = useState([]);\r\n  const [Partnercount, SetPartnercount] = useState([]);\r\n  const [Queriescount, SetQueriescount] = useState([]);\r\n  const [NotmembersCount, SetNotmembersCount] = useState([]);\r\n  const [MonthlyPropertyCount, SetMonthlyPropertyCount] = useState([]);\r\n  const [MonthlyMemberCount, SetMonthlyMemberCount] = useState([]);\r\n  const [NotMonthlyMemberCount, SetNotMonthlyMemberCount] = useState([]);\r\n\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(globalvariables.data.Basicapi + \"getMemberCount\",\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting Membercount\", res.data);\r\n      SetMembercount(res.data)\r\n\r\n\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting Membercount\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(globalvariables.data.Basicapi + \"getGuestCount\",\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting Non Membercount\", res.data);\r\n      SetNotmembersCount(res.data)\r\n\r\n\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting Non Membercount\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(globalvariables.data.Basicapi + \"getAgentCount\",\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting Agentcount\", res.data);\r\n      SetAgentcount(res.data)\r\n\r\n\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting Agentcount\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(globalvariables.data.Basicapi + \"getPropertyCount\",\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting Propertycount\", res.data);\r\n      SetPropertycount(res.data)\r\n\r\n\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting Propertycount\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(globalvariables.data.Basicapi + \"getProjectCount\",\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting Projectcount\", res.data);\r\n\r\n      SetProjectcount(res.data)\r\n\r\n\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting Projectcount\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(globalvariables.data.Basicapi + \"getPartnerCount\",\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting Partner Count\", res.data);\r\n      SetPartnercount(res.data)\r\n\r\n\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting Partner Count\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(globalvariables.data.Basicapi + \"getQueriesCount\",\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting Queries Count\", res.data);\r\n      SetQueriescount(res.data)\r\n\r\n\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting Partner Count\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(globalvariables.data.Basicapi + \"monthlyPropertyCount\",\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting Monthly property Count\", res.data);\r\n      SetMonthlyPropertyCount(res.data)\r\n\r\n\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting Monthly property Count\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(globalvariables.data.Basicapi + \"monthlyMemberCount\",\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting Monthly Member Count\", res.data);\r\n      SetMonthlyMemberCount(res.data)\r\n\r\n\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting Monthly Member Count\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(globalvariables.data.Basicapi + \"monthlyGuestCount\",\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n      console.log(\"res from getting Monthly Non Member Count\", res.data);\r\n      SetNotMonthlyMemberCount(res.data)\r\n\r\n\r\n\r\n    } catch (error) {\r\n      alert(\"From try catch of getting Monthly Non Member Count\", error.toString());\r\n\r\n      // console.log(error);\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h3>Dashboard</h3>\r\n\r\n      <Row style={{ marginBottom: '2.5%' }}>\r\n        <Col md={4}>\r\n          <Link style={{ color: 'black' }} to=\"/membersdashboard\">\r\n            <Card bg=\"info\" >\r\n              <Card.Body>\r\n                <Card.Title style={{ textAlign: \"center\" }}>Members</Card.Title>\r\n                <Card.Text>\r\n                  <h3 style={{ textAlign: \"center\" }}>{Membercount}</h3>\r\n                </Card.Text>\r\n\r\n              </Card.Body>\r\n            </Card>\r\n          </Link>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card bg=\"info\">\r\n            <Card.Body>\r\n              <Card.Title style={{ textAlign: \"center\" }}>Non Members</Card.Title>\r\n              <Card.Text>\r\n                <h3 style={{ textAlign: \"center\" }}>{NotmembersCount}</h3>\r\n              </Card.Text>\r\n\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card bg=\"info\">\r\n            <Card.Body>\r\n              <Card.Title style={{ textAlign: \"center\" }}>Projects Uploaded</Card.Title>\r\n              <Card.Text>\r\n                <h3 style={{ textAlign: \"center\" }}>{Projectcount}</h3>\r\n              </Card.Text>\r\n\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n\r\n      </Row>\r\n\r\n\r\n\r\n\r\n      <Row>\r\n        <Col md={4}>\r\n          <Card bg=\"success\">\r\n            <Card.Body>\r\n              <Card.Title style={{ textAlign: \"center\" }}>Listed Properties</Card.Title>\r\n              <Card.Text>\r\n                <h3 style={{ textAlign: \"center\" }}>{Propertycount}</h3>\r\n              </Card.Text>\r\n\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card bg=\"success\">\r\n            <Card.Body>\r\n              <Card.Title style={{ textAlign: \"center\" }}>Partners Updated</Card.Title>\r\n              <Card.Text>\r\n                <h3 style={{ textAlign: \"center\" }}>{Partnercount}</h3>\r\n              </Card.Text>\r\n\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card bg=\"success\">\r\n            <Card.Body>\r\n              <Card.Title style={{ textAlign: \"center\" }}>Total Agents</Card.Title>\r\n              <Card.Text>\r\n                <h3 style={{ textAlign: \"center\" }}>{Agentcount}</h3>\r\n              </Card.Text>\r\n\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n\r\n      </Row>\r\n      <Row style={{ padding: '2.5%' }}>\r\n        <Paper elevation={3} >\r\n          <Col md={6}>\r\n            <h5>Monthly Property Chart</h5>\r\n            <ComposedChart\r\n              width={500}\r\n              height={400}\r\n              data={MonthlyPropertyCount}\r\n              margin={{\r\n                top: 20,\r\n                right: 20,\r\n                bottom: 20,\r\n                left: 20,\r\n              }}\r\n            >\r\n              <CartesianGrid stroke=\"#f5f5f5\" />\r\n              <XAxis dataKey=\"date\" scale=\"band\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"COUNT(property_ID)\" barSize={20} fill=\"#413ea0\" />\r\n              <Line type=\"monotone\" dataKey=\"COUNT(property_ID)\" stroke=\"#ff7300\" />\r\n            </ComposedChart>\r\n          </Col>\r\n        </Paper>\r\n        <Paper elevation={3}  style={{marginLeft:'2.5%'}}>\r\n          <Col md={6}>\r\n          <h5>Monthly Members Registeration Chart</h5>\r\n\r\n            <AreaChart\r\n              width={500}\r\n              height={400}\r\n              data={MonthlyMemberCount}\r\n              margin={{\r\n                top: 10,\r\n                right: 30,\r\n                left: 0,\r\n                bottom: 0,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"date\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Area type=\"monotone\" dataKey=\"memberCount\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n            </AreaChart>\r\n          </Col>\r\n        </Paper>\r\n      </Row>\r\n\r\n      <Row style={{ padding: '2.5%' }}>\r\n        <Paper elevation={3} >\r\n        <Col md={6}>\r\n        <h5>Non Members</h5>\r\n\r\n          <AreaChart\r\n          width={500}\r\n          height={400}\r\n          data={NotMonthlyMemberCount}\r\n          margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 0,\r\n            bottom: 0,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Area type=\"monotone\" dataKey=\"guestCount\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.3} />\r\n        </AreaChart>\r\n        </Col>\r\n      </Paper>\r\n      </Row>\r\n\r\n\r\n\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n  withStyles(Styles)\r\n)(Dashboard);\r\n"],"sourceRoot":""}